{"remainingRequest":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js!/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sena/Desktop/front-carService/src/views/icons/Flags.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sena/Desktop/front-carService/src/views/icons/Flags.vue","mtime":1616347706732},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZmxhZ1NldCB9IGZyb20gJ0Bjb3JldWkvaWNvbnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZsYWdzJywKICBmbGFnU2V0OiBmbGFnU2V0LAogIGNvbXB1dGVkOiB7CiAgICBkaXNwbGF5ZWRGbGFnczogZnVuY3Rpb24gZGlzcGxheWVkRmxhZ3MoKSB7CiAgICAgIHJldHVybiB0aGlzLiRvcHRpb25zLmZsYWdTZXQ7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b0tlYmFiQ2FzZTogZnVuY3Rpb24gdG9LZWJhYkNhc2Uoc3RyKSB7CiAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aMC05XSkvZywgJyQxLSQyJykudG9Mb3dlckNhc2UoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Flags.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,OAAA,QAAA,eAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,OAAA,EAAA,OAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,QAAA,CAAA,OAAA;AACA;AAHA,GAHA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,GADA,EACA;AACA,aAAA,GAAA,CAAA,OAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,WAAA,EAAA;AACA;AAHA;AARA,CAAA","sourcesContent":["<template>\n  <div>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-globe-alt\"/> Flags\n      </CCardHeader>\n      <CCardBody>\n        <CRow class=\"text-center\">\n          <CCol class=\"mb-5\" col=\"12\">\n            <!-- For using the flags inline with text add the classes\n            <code>.flag-icon</code> and <code>.flag-icon-xx</code>\n            (where xx is the ISO 3166-1-alpha-2 code of a country) to an empty\n            span. If you want to have a squared version flag then add the class\n            flag-icon-squared as well. -->\n          </CCol>\n          <template v-for=\"(flag, flagName) in displayedFlags\">\n            <CCol\n              class=\"mb-5\"\n              col=\"3\"\n              sm=\"2\"\n              :key=\"flagName\"\n            >\n              <CIcon :height=\"42\" :content=\"flag\"/>\n              <div>{{toKebabCase(flagName)}}</div>\n            </CCol>\n          </template>\n        </CRow>\n      </CCardBody>\n    </CCard>\n  </div>\n</template>\n\n<script>\nimport { flagSet } from '@coreui/icons'\nexport default {\n  name: 'Flags',\n  flagSet,\n  computed: {\n    displayedFlags () {\n      return this.$options.flagSet\n    }\n  },\n  methods: {\n    toKebabCase (str) {\n      return str.replace(/([a-z])([A-Z0-9])/g, '$1-$2').toLowerCase()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/icons"}]}