{"remainingRequest":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js!/home/sena/Desktop/front-carService/node_modules/@coreui/utils/src/deep-objects-merge.js","dependencies":[{"path":"/home/sena/Desktop/front-carService/node_modules/@coreui/utils/src/deep-objects-merge.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIGRlZXBPYmplY3RzTWVyZ2UgPSBmdW5jdGlvbiBkZWVwT2JqZWN0c01lcmdlKHRhcmdldCwgc291cmNlKSB7CiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGBzb3VyY2VgIHByb3BlcnRpZXMgYW5kIGlmIGFuIGBPYmplY3RgIHNldCBwcm9wZXJ0eSB0byBtZXJnZSBvZiBgdGFyZ2V0YCBhbmQgYHNvdXJjZWAgcHJvcGVydGllcwogIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgX2kgPCBfT2JqZWN0JGtleXMubGVuZ3RoOyBfaSsrKSB7CiAgICB2YXIga2V5ID0gX09iamVjdCRrZXlzW19pXTsKCiAgICBpZiAoc291cmNlW2tleV0gaW5zdGFuY2VvZiBPYmplY3QpIHsKICAgICAgT2JqZWN0LmFzc2lnbihzb3VyY2Vba2V5XSwgZGVlcE9iamVjdHNNZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0pKTsKICAgIH0KICB9IC8vIEpvaW4gYHRhcmdldGAgYW5kIG1vZGlmaWVkIGBzb3VyY2VgCgoKICBPYmplY3QuYXNzaWduKHRhcmdldCB8fCB7fSwgc291cmNlKTsKICByZXR1cm4gdGFyZ2V0Owp9OwoKZXhwb3J0IGRlZmF1bHQgZGVlcE9iamVjdHNNZXJnZTs="},{"version":3,"sources":["/home/sena/Desktop/front-carService/node_modules/@coreui/utils/src/deep-objects-merge.js"],"names":["deepObjectsMerge","target","source","Object","keys","key","assign"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC3C;AACA,kCAAkBC,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAlB,kCAAuC;AAAlC,QAAMG,GAAG,mBAAT;;AACH,QAAIH,MAAM,CAACG,GAAD,CAAN,YAAuBF,MAA3B,EAAmC;AACjCA,MAAAA,MAAM,CAACG,MAAP,CAAcJ,MAAM,CAACG,GAAD,CAApB,EAA2BL,gBAAgB,CAACC,MAAM,CAACI,GAAD,CAAP,EAAcH,MAAM,CAACG,GAAD,CAApB,CAA3C;AACD;AACF,GAN0C,CAQ3C;;;AACAF,EAAAA,MAAM,CAACG,MAAP,CAAcL,MAAM,IAAI,EAAxB,EAA4BC,MAA5B;AACA,SAAOD,MAAP;AACD,CAXD;;AAaA,eAAeD,gBAAf","sourcesContent":["const deepObjectsMerge = (target, source) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object) {\r\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\r\n    }\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source)\r\n  return target\r\n}\r\n\r\nexport default deepObjectsMerge\r\n"]}]}