{"remainingRequest":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js!/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sena/Desktop/front-carService/src/views/base/ProgressBars.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sena/Desktop/front-carService/src/views/base/ProgressBars.vue","mtime":1616347706732},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQcm9ncmVzc0JhcnMnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb3VudGVyOiA3MywKICAgICAgbWF4OiAxMDAsCiAgICAgIG1heDI6IDUwLAogICAgICB2YWx1ZTogMzMuMzMzMzMzMzMzLAogICAgICB2YWx1ZTM6IDc1LAogICAgICBiYXJzOiBbewogICAgICAgIGNvbG9yOiAnc3VjY2VzcycsCiAgICAgICAgdmFsdWU6IDc1CiAgICAgIH0sIHsKICAgICAgICBjb2xvcjogJ2luZm8nLAogICAgICAgIHZhbHVlOiA3NQogICAgICB9LCB7CiAgICAgICAgY29sb3I6ICd3YXJuaW5nJywKICAgICAgICB2YWx1ZTogNzUKICAgICAgfSwgewogICAgICAgIGNvbG9yOiAnZGFuZ2VyJywKICAgICAgICB2YWx1ZTogNzUKICAgICAgfSwgewogICAgICAgIGNvbG9yOiAncHJpbWFyeScsCiAgICAgICAgdmFsdWU6IDc1CiAgICAgIH0sIHsKICAgICAgICBjb2xvcjogJ3NlY29uZGFyeScsCiAgICAgICAgdmFsdWU6IDc1CiAgICAgIH0sIHsKICAgICAgICBjb2xvcjogJ2RhcmsnLAogICAgICAgIHZhbHVlOiA3NQogICAgICB9XSwKICAgICAgdGltZXI6IG51bGwsCiAgICAgIHN0cmlwZWQ6IHRydWUsCiAgICAgIGFuaW1hdGU6IHRydWUsCiAgICAgIG1heDM6IDEwMCwKICAgICAgdmFsdWVzOiBbMTUsIDMwLCAyMF0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbGlja2VkOiBmdW5jdGlvbiBjbGlja2VkKCkgewogICAgICB0aGlzLmNvdW50ZXIgPSBNYXRoLnJhbmRvbSgpICogdGhpcy5tYXg7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5iYXJzLmZvckVhY2goZnVuY3Rpb24gKGJhcikgewogICAgICAgIGJhci52YWx1ZSA9IDI1ICsgTWF0aC5yYW5kb20oKSAqIDc1OwogICAgICB9KTsKICAgIH0sIDIwMDApOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgICB0aGlzLnRpbWVyID0gbnVsbDsKICB9Cn07"},{"version":3,"sources":["ProgressBars.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,GAAA,EAAA,GAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,YAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAMA,MAAA,IAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA,CANA;AAeA,MAAA,KAAA,EAAA,IAfA;AAgBA,MAAA,OAAA,EAAA,IAhBA;AAiBA,MAAA,OAAA,EAAA,IAjBA;AAkBA,MAAA,IAAA,EAAA,GAlBA;AAmBA,MAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAnBA,KAAA;AAqBA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,OAAA,GAAA,IAAA,CAAA,MAAA,KAAA,KAAA,GAAA;AACA;AAHA,GAzBA;AA8BA,EAAA,OA9BA,qBA8BA;AAAA;;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,GAAA,CAAA,KAAA,GAAA,KAAA,IAAA,CAAA,MAAA,KAAA,EAAA;AACA,OAFA;AAGA,KAJA,EAIA,IAJA,CAAA;AAKA,GApCA;AAqCA,EAAA,aArCA,2BAqCA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA;AAxCA,CAAA","sourcesContent":["<template>\n  <div>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Bootstrap Progress</strong>\n        <div class=\"card-header-actions\">\n          <a \n            href=\"https://coreui.io/vue/docs/components/progress\" \n            class=\"card-header-action\" \n            rel=\"noreferrer noopener\" \n            target=\"_blank\"\n          >\n            <small class=\"text-muted\">docs</small>\n          </a>\n        </div>\n      </CCardHeader>\n      <CCardBody>\n        <CProgress :value=\"counter\" :max=\"max\" show-percentage animated></CProgress>\n        <CProgress class=\"mt-1\" :max=\"max\" show-value>\n          <CProgressBar :value=\"counter*(6/10)\" color=\"success\"/>\n          <CProgressBar :value=\"counter*(2.5/10)\" color=\"warning\"/>\n          <CProgressBar :value=\"counter*(1.5/10)\" color=\"danger\"/>\n        </CProgress>\n        <CButton \n          @click=\"clicked\"\n          color=\"secondary\"\n          class=\"mt-4\" \n        >\n          Click me to animate progress bars\n        </CButton>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/> <strong> Progress </strong><small>labels</small>\n      </CCardHeader>\n      <CCardBody>\n        <h6>No label</h6>\n        <CProgress :value=\"value\" :max=\"max2\" class=\"mb-3\"/>\n        <h6>Value label</h6>\n        <CProgress :value=\"value\" :max=\"max2\" show-value class=\"mb-3\"/>\n        <h6>Progress label</h6>\n        <CProgress :value=\"value\" :max=\"max2\" show-percentage class=\"mb-3\"/>\n        <h6>Value label with precision</h6>\n        <CProgress :value=\"value\" :max=\"max2\" :precision=\"2\" show-value class=\"mb-3\"/>\n        <h6>Progress label with precision</h6>\n        <CProgress :value=\"value\" :max=\"max2\" :precision=\"2\" show-percentage class=\"mb-3\"/>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Progress </strong>\n        <small>width</small>\n      </CCardHeader>\n      <CCardBody>\n        <h6>Default width</h6>\n        <CProgress :value=\"value3\" class=\"mb-3\"/>\n        <h6>Custom widths</h6>\n        <CProgress :value=\"value3\" class=\"w-75 mb-2\"/>\n        <CProgress :value=\"value3\" class=\"w-50 mb-2\"/>\n        <CProgress :value=\"value3\" class=\"w-25\"/>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Progress </strong>\n        <small>height</small>\n      </CCardHeader>\n      <CCardBody>\n        <h6>Default height</h6>\n        <CProgress :value=\"value3\" show-percentage class=\"mb-3\"/>\n        <h6>Custom heights</h6>\n        <CProgress height=\"2rem\" :value=\"value3\" show-percentage class=\"mb-2\"/>\n        <CProgress height=\"20px\" :value=\"value3\" show-percentage class=\"mb-2\"/>\n        <CProgress height=\"2px\" :value=\"value3\"/>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Progress </strong>\n        <small>colors</small>\n      </CCardHeader>\n      <CCardBody>\n        <div :key=\"index\" v-for=\"(bar, index) in bars\" class=\"row mb-1\">\n          <div class=\"col-sm-2\">{{ bar.color }}:</div>\n          <div class=\"col-sm-10 pt-1\">\n            <CProgress\n              :value=\"bar.value\"\n              :color=\"bar.color\"\n              :key=\"bar.color\"\n            />\n          </div>\n        </div>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Progress </strong>\n        <small>striped</small>\n      </CCardHeader>\n      <CCardBody>\n        <CProgress\n          :value=\"25\"\n          color=\"success\"\n          :striped=\"striped\"\n          class=\"mb-2\"\n        />\n        <CProgress\n          :value=\"50\"\n          color=\"info\"\n          :striped=\"striped\"\n          class=\"mb-2\"\n        />\n        <CProgress\n          :value=\"75\"\n          color=\"warning\"\n          :striped=\"striped\"\n          class=\"mb-2\"\n        />\n        <CProgress\n          :value=\"100\"\n          color=\"danger\"\n          :striped=\"striped\"\n          class=\"mb-2\"\n        />\n        <CButton color=\"secondary\" @click=\"striped = !striped\">\n          {{ striped ? 'Remove' : 'Add'}} Striped\n        </CButton>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Progress </strong>\n        <small>animated</small>\n      </CCardHeader>\n      <CCardBody>\n        <CProgress\n          :value=\"25\"\n          color=\"success\"\n          striped\n          :animated=\"animate\"\n          class=\"mb-2\"\n        />\n        <CProgress\n          :value=\"50\"\n          color=\"info\"\n          striped\n          :animated=\"animate\"\n          class=\"mb-2\"\n        />\n        <CProgress\n          :value=\"75\"\n          color=\"warning\"\n          striped\n          :animated=\"animate\"\n          class=\"mb-2\"\n        />\n        <CProgress\n          :value=\"100\"\n          color=\"danger\"\n          :animated=\"animate\"\n          class=\"mb-3\"\n        />\n        <CButton color=\"secondary\" @click=\"animate = !animate\">\n          {{ animate ? 'Stop' : 'Start'}} Animation\n        </CButton>\n      </CCardBody>\n    </CCard>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-justify-center\"/>\n        <strong> Progress </strong>\n        <small>multiple bars</small>\n      </CCardHeader>\n      <CCardBody>\n        <CProgress :max=\"max3\" class=\"mb-3\">\n          <CProgressBar color=\"primary\" :value=\"values[0]\"/>\n          <CProgressBar color=\"success\" :value=\"values[1]\"/>\n          <CProgressBar color=\"info\" :value=\"values[2]\"/>\n        </CProgress>\n        <CProgress show-percentage :max=\"max3\" class=\"mb-3\">\n          <CProgressBar color=\"primary\" :value=\"values[0]\"/>\n          <CProgressBar color=\"success\" :value=\"values[1]\"/>\n          <CProgressBar color=\"info\" :value=\"values[2]\"/>\n        </CProgress>\n        <CProgress show-value striped :max=\"max3\" class=\"mb-3\">\n          <CProgressBar color=\"primary\" :value=\"values[0]\"/>\n          <CProgressBar color=\"success\" :value=\"values[1]\"/>\n          <CProgressBar color=\"info\" :value=\"values[2]\"/>\n        </CProgress>\n        <CProgress :max=\"max3\" class=\"mb-3\">\n          <CProgressBar color=\"primary\" :value=\"values[0]\" show-percentage/>\n          <CProgressBar color=\"success\" :value=\"values[1]\" animated show-percentage/>\n          <CProgressBar color=\"info\" :value=\"values[2]\" striped show-percentage/>\n        </CProgress>\n      </CCardBody>\n    </CCard>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProgressBars',\n  data () {\n    return {\n      counter: 73,\n      max: 100,\n      max2: 50,\n      value: 33.333333333,\n      value3: 75,\n      bars: [\n        {color: 'success', value: 75},\n        {color: 'info', value: 75},\n        {color: 'warning', value: 75},\n        {color: 'danger', value: 75},\n        {color: 'primary', value: 75},\n        {color: 'secondary', value: 75},\n        {color: 'dark', value: 75}\n      ],\n      timer: null,\n      striped: true,\n      animate: true,\n      max3: 100,\n      values: [ 15, 30, 20 ]\n    }\n  },\n  methods: {\n    clicked () {\n      this.counter = Math.random() * this.max\n    }\n  },\n  mounted () {\n    this.timer = setInterval(() => {\n      this.bars.forEach(bar => {\n        bar.value = 25 + (Math.random() * 75)\n      })\n    }, 2000)\n  },\n  beforeDestroy () {\n    clearInterval(this.timer)\n    this.timer = null\n  }\n}\n</script>\n"],"sourceRoot":"src/views/base"}]}