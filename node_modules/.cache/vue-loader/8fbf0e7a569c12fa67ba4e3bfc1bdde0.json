{"remainingRequest":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sena/Desktop/front-carService/src/views/theme/Typography.vue?vue&type=template&id=1a614eef&","dependencies":[{"path":"/home/sena/Desktop/front-carService/src/views/theme/Typography.vue","mtime":1616347706732},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}