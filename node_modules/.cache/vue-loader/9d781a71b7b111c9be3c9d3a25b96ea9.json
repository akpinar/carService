{"remainingRequest":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sena/Desktop/front-carService/src/views/users/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sena/Desktop/front-carService/src/views/users/Users.vue","mtime":1616347706732},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1c2Vyc0RhdGEgZnJvbSAnLi9Vc2Vyc0RhdGEnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVXNlcnMnLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgaXRlbXM6IHVzZXJzRGF0YSwKICAgICAgZmllbGRzOiBbCiAgICAgICAgeyBrZXk6ICd1c2VybmFtZScsIGxhYmVsOiAnTmFtZScsIF9jbGFzc2VzOiAnZm9udC13ZWlnaHQtYm9sZCcgfSwKICAgICAgICB7IGtleTogJ3JlZ2lzdGVyZWQnIH0sCiAgICAgICAgeyBrZXk6ICdyb2xlJyB9LAogICAgICAgIHsga2V5OiAnc3RhdHVzJyB9CiAgICAgIF0sCiAgICAgIGFjdGl2ZVBhZ2U6IDEKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAkcm91dGU6IHsKICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICBoYW5kbGVyIChyb3V0ZSkgewogICAgICAgIGlmIChyb3V0ZS5xdWVyeSAmJiByb3V0ZS5xdWVyeS5wYWdlKSB7CiAgICAgICAgICB0aGlzLmFjdGl2ZVBhZ2UgPSBOdW1iZXIocm91dGUucXVlcnkucGFnZSkKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEJhZGdlIChzdGF0dXMpIHsKICAgICAgc3dpdGNoIChzdGF0dXMpIHsKICAgICAgICBjYXNlICdBY3RpdmUnOiByZXR1cm4gJ3N1Y2Nlc3MnCiAgICAgICAgY2FzZSAnSW5hY3RpdmUnOiByZXR1cm4gJ3NlY29uZGFyeScKICAgICAgICBjYXNlICdQZW5kaW5nJzogcmV0dXJuICd3YXJuaW5nJwogICAgICAgIGNhc2UgJ0Jhbm5lZCc6IHJldHVybiAnZGFuZ2VyJwogICAgICAgIGRlZmF1bHQ6ICdwcmltYXJ5JwogICAgICB9CiAgICB9LAogICAgcm93Q2xpY2tlZCAoaXRlbSwgaW5kZXgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goe3BhdGg6IGB1c2Vycy8ke2luZGV4ICsgMX1gfSkKICAgIH0sCiAgICBwYWdlQ2hhbmdlICh2YWwpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBxdWVyeTogeyBwYWdlOiB2YWwgfX0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\n  <CRow>\n    <CCol col=\"12\" xl=\"8\">\n      <CCard>\n        <CCardHeader>\n          Users\n        </CCardHeader>\n        <CCardBody>\n          <CDataTable\n            hover\n            striped\n            :items=\"items\"\n            :fields=\"fields\"\n            :items-per-page=\"5\"\n            clickable-rows\n            :active-page=\"activePage\"\n            @row-clicked=\"rowClicked\"\n            :pagination=\"{ doubleArrows: false, align: 'center'}\"\n            @page-change=\"pageChange\"\n          >\n            <template #status=\"data\">\n              <td>\n                <CBadge :color=\"getBadge(data.item.status)\">\n                  {{data.item.status}}\n                </CBadge>\n              </td>\n            </template>\n          </CDataTable>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nimport usersData from './UsersData'\nexport default {\n  name: 'Users',\n  data () {\n    return {\n      items: usersData,\n      fields: [\n        { key: 'username', label: 'Name', _classes: 'font-weight-bold' },\n        { key: 'registered' },\n        { key: 'role' },\n        { key: 'status' }\n      ],\n      activePage: 1\n    }\n  },\n  watch: {\n    $route: {\n      immediate: true,\n      handler (route) {\n        if (route.query && route.query.page) {\n          this.activePage = Number(route.query.page)\n        }\n      }\n    }\n  },\n  methods: {\n    getBadge (status) {\n      switch (status) {\n        case 'Active': return 'success'\n        case 'Inactive': return 'secondary'\n        case 'Pending': return 'warning'\n        case 'Banned': return 'danger'\n        default: 'primary'\n      }\n    },\n    rowClicked (item, index) {\n      this.$router.push({path: `users/${index + 1}`})\n    },\n    pageChange (val) {\n      this.$router.push({ query: { page: val }})\n    }\n  }\n}\n</script>\n"]}]}