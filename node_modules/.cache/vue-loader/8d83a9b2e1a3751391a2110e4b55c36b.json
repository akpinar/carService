{"remainingRequest":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sena/Desktop/front-carService/src/views/base/Tables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sena/Desktop/front-carService/src/views/base/Tables.vue","mtime":1616347706732},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sena/Desktop/front-carService/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sena/Desktop/front-carService/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDVGFibGVXcmFwcGVyIGZyb20gJy4vVGFibGUudnVlJwppbXBvcnQgdXNlcnNEYXRhIGZyb20gJy4uL3VzZXJzL1VzZXJzRGF0YScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVGFibGVzJywKICBjb21wb25lbnRzOiB7IENUYWJsZVdyYXBwZXIgfSwKICBtZXRob2RzOiB7CiAgICBzaHVmZmxlQXJyYXkgKGFycmF5KSB7CiAgICAgIGZvciAobGV0IGkgPSBhcnJheS5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7CiAgICAgICAgbGV0IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKQogICAgICAgIGxldCB0ZW1wID0gYXJyYXlbaV0KICAgICAgICBhcnJheVtpXSA9IGFycmF5W2pdCiAgICAgICAgYXJyYXlbal0gPSB0ZW1wCiAgICAgIH0KICAgICAgcmV0dXJuIGFycmF5CiAgICB9LAoKICAgIGdldFNodWZmbGVkVXNlcnNEYXRhICgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2h1ZmZsZUFycmF5KHVzZXJzRGF0YS5zbGljZSgwKSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Tables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Tables.vue","sourceRoot":"src/views/base","sourcesContent":["<template>\n  <div>\n    <CRow>\n      <CCol lg=\"6\">\n        <CTableWrapper :items=\"getShuffledUsersData()\">\n          <template #header>\n            <CIcon name=\"cil-grid\"/> Simple Table\n            <div class=\"card-header-actions\">\n              <a \n                href=\"https://coreui.io/vue/docs/components/nav\" \n                class=\"card-header-action\" \n                rel=\"noreferrer noopener\" \n                target=\"_blank\"\n              >\n                <small class=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </template>\n        </CTableWrapper>\n      </CCol>\n\n      <CCol lg=\"6\">\n        <CTableWrapper\n          :items=\"getShuffledUsersData()\"\n          striped\n          caption=\"Striped Table\"\n        />\n      </CCol>\n    </CRow>\n\n    <CRow>\n      <CCol lg=\"6\">\n        <CTableWrapper\n          :items=\"getShuffledUsersData()\"\n          small\n          caption=\"Condensed Table\"\n        />\n      </CCol>\n\n      <CCol lg=\"6\">\n        <CTableWrapper\n          :items=\"getShuffledUsersData()\"\n          fixed\n          bordered\n          caption=\"Bordered Table\"\n        />\n      </CCol>\n    </CRow>\n\n    <CRow>\n      <CCol sm=\"12\">\n        <CTableWrapper\n          :items=\"getShuffledUsersData()\"\n          hover\n          striped\n          bordered\n          small\n          fixed\n          caption=\"Combined All Table\"\n        />\n      </CCol>\n    </CRow>\n\n    <CRow>\n      <CCol sm=\"12\">\n        <CTableWrapper\n          :items=\"getShuffledUsersData()\"\n          hover\n          striped\n          bordered\n          small\n          fixed\n          dark\n          caption=\"Combined All dark Table\"\n        />\n      </CCol>\n    </CRow>\n  </div>\n</template>\n\n<script>\nimport CTableWrapper from './Table.vue'\nimport usersData from '../users/UsersData'\n\nexport default {\n  name: 'Tables',\n  components: { CTableWrapper },\n  methods: {\n    shuffleArray (array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1))\n        let temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n      }\n      return array\n    },\n\n    getShuffledUsersData () {\n      return this.shuffleArray(usersData.slice(0))\n    }\n  }\n}\n</script>\n"]}]}